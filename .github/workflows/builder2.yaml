name: Build and Push Docker Images 2

on:
  workflow_run:
    workflows: ["Update build.yaml on new submodule release"]
    types:
      - completed
  push:
    tags:
      - '*'
  workflow_dispatch:
  
env:
  REPOSITORY: pulpyyyy
  REGISTRY: docker.io
  
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_addon:
    name: Build addon
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, armhf, armv7, aarch64,  i386]
        addon: [zwavejsuiproxy]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.2.2

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"
          
      - name: Check if add-on should be built
        id: check
        run: |
          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
             echo "build_arch=true" >>$GITHUB_OUTPUT
             echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >>$GITHUB_OUTPUT
           else
             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build"
             echo "build_arch=false" >>$GITHUB_OUTPUT
          fi
          
          BUILD_ARGS=""
          if ${{ !startsWith(github.ref, 'refs/tags/v') }}; then
            BUILD_ARGS+=" --no-latest --version unstable-${GITHUB_REF_NAME//[\/]/-}"
            if ${{ github.ref != 'refs/heads/main' }}; then
              BUILD_ARGS+=" --test"
            fi
          fi
          echo "build_args=$BUILD_ARGS" >>$GITHUB_OUTPUT
          
      - name: Publish builder
        if: env.IMAGE_EXISTS == 'false'
        uses: home-assistant/builder@2025.03.0
        with:
          args: |
            --addon \
            --all \
            --docker-hub "${{ env.REGISTRY }}" \
            --target /data/${{ matrix.addon }} \
            --docker-hub ${{ env.REPOSITORY }} \
            --docker-hub-check \
            --docker-user ${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-password ${{ secrets.DOCKERHUB_TOKEN }}
